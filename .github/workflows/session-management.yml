name: Session Management

on: 
    push:
        branches: 
            - 'main'
        paths:
            - 'session_management/**'
            - 'terraform/**'
            - '.github/workflows/session-management.yml'

env:
  PYTHON_VERSION: "3.13"
  

permissions:
  id-token: write
  contents: read
  
jobs:
    build:
        runs-on: ubuntu-latest
        name: Install dependencies and run unit tests
        steps:
            - uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                python-version: ${{env.PYTHON_VERSION}}

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pwd
                ls session_management
                pip install -r ./session_management/requirements.txt

           # - name: Run unit tests    
           #   run: |
           #     pytest . --doctest-modules --junitxml=test-results.xml --cov=com --cov-report=xml --cov-report=html

           # - name: Upload test results
           #   uses: actions/upload-artifact@v4
           #   if: ${{ always() }}
           #   with:
           #     name: pytest-results
           #     path: test-results.xml
            
            #- name: Create test report
            #  uses: dorny/test-reporter@v1
            #  if: ${{ always() }}
            #  with:
            #    name: Test Results Report
            #    artifact: pytest-results
            #    path: test-results.xml
            #    reporter: jest-junit
            #    fail-on-error: 'false'
            
    docker:
      runs-on: ubuntu-latest
      needs:
        - build
      name: Generate and Publish Docker Image
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Docker Build & Publish
          uses: ./.github/actions/docker-publish
          with:
            image_name: brunogino/iamind-session_management:latest
            project_path: ./session_management
            docker_repo: ${{secrets.SESSION_MANAGEMENT_DOCKER_REPO}}
            docker_repo_token: ${{secrets.DOCKER_REPO_TOKEN}}
            docker_repo_user: ${{secrets.DOCKER_REPO_USER}}

    deploy-to-aws:
      runs-on: ubuntu-latest
      name: Deploy to AWS
      needs:
        - docker
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Deploy with terraform
          uses: ./.github/actions/aws-deploy
          with:
            aws_deployment_role: ${{secrets.AWS_DEPLOYMENT_ROLE_ARN}}
            aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
            docker_repo_token: ${{secrets.DOCKER_REPO_TOKEN}}
            docker_repo_user: ${{secrets.DOCKER_REPO_USER}}
